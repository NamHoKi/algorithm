/*
 ✏️문제
 1부터 100까지 번호가 쓰인 100장의 카드가 순서대로 나열되어 있습니다. 모든 카드는 뒷면이 위를 향한 상태로 놓여 있습니다. 한 사람이 2번 카드부터 1장 간격으로 카드를 뒤집어 나갑니다. 그러면 2, 4, 6, ..., 100번 카드의 앞면이 나타나게 됩니다.
 그다음으로, 다른 사람이 3번 카드부터 2장 간격으로 카드를 뒤집어 나갑니다. (뒷면이 위를 향한 카드는 앞면이 보이게 되고 앞면이 위를 향한 카드는 뒷면이 보이게 됩니다.) 다시 다른 사람이 4번 카드부터 3장 간격으로 카드를 뒤집어 나갑니다.
 이렇게 n번째의 카드부터 n-1장 간격으로 카드를 뒤집는 작업을 뒤집을 카드가 더는 없을 때까지 계속 한다고 합시다.
 뒤집을 카드가 더는 없을 때 뒷면이 위를 향한 카드의 번호를 모두 구해 보세요.
 */

import Foundation

//카드 덱 생성
var card: [Int: Bool] = [:]
for number in 1...100 { card[number] = false }

//toggle로 카드 뒤집기
for c in 1...card.count {
    let distance = c + 1
    var key = distance
    while key < 100 {
        card[key]?.toggle()
        key += distance
    }
}

// 뒷면만 걸러내기
card = card.filter{ !$0.value }

print(card.keys.sorted(by: <)) // [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

